{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","addContact","this","className","onSubmit","placeholder","onChange","type","pattern","title","required","Component","Filter","ContactList","contacts","onDeliteContact","map","contact","onClick","id","shortid","require","App","filter","prevState","onFilter","find","alert","generate","changeFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18b05c9a.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./ContactForm.css\";\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state.name, this.state.number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"contactForm\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form__label\">\r\n          Name\r\n          <input\r\n            placeholder=\"Введите имя\"\r\n            className=\"form__input\"\r\n            onChange={this.handleChange}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label className=\"form__label\">\r\n          Number\r\n          <input\r\n            placeholder=\"Введите номер\"\r\n            className=\"form__input\"\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button className=\"form__button\" type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  addContact: propTypes.func,\r\n};\r\n","import propTypes from \"prop-types\";\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        onChange={onChange}\r\n        value={value}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: propTypes.string,\r\n  onChange: propTypes.func,\r\n};\r\n","import \"./ContactList.css\";\r\nimport propTypes from \"prop-types\";\r\nexport default function ContactList({ contacts, onDeliteContact }) {\r\n  return (\r\n    <ul className=\"contactList\">\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <li className=\"contactItem\" key={contact.id}>\r\n            <div className=\"contactBlock\">\r\n              <sapn>{contact.name}</sapn>\r\n              <sapn className=\"nubmer\">{contact.number}</sapn>\r\n            </div>\r\n\r\n            <button\r\n              className=\"deleteBotton\"\r\n              onClick={() => {\r\n                onDeliteContact(contact.id);\r\n              }}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: propTypes.array,\r\n  onDeliteContact: propTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter/\";\nimport ContactList from \"./components/ContactList/\";\nconst shortid = require(\"shortid\");\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  onDeliteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n  onFilter = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState((prevState) => ({\n      contacts: [contact, ...this.state.contacts],\n    }));\n  };\n\n  changeFilter = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n  render() {\n    const visibleContacts = this.changeFilter();\n    const { filter } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.onFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeliteContact={this.onDeliteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}